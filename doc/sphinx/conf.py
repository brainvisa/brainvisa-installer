# -*- coding: utf-8 -*-
#
# SOMA documentation build configuration file, created by
# sphinx-quickstart on Wed Sep  4 12:18:01 2013.
#
# This file is execfile()d with the current directory set to its containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

from __future__ import absolute_import
import sys
import os
from distutils.version import LooseVersion
import sphinx
if LooseVersion(sphinx.__version__) < LooseVersion('1'):
    raise RuntimeError('Need sphinx >= 1 for autodoc to work correctly')

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
sys.path.insert(0, os.path.abspath('sphinxext'))

try:
    from soma import aims
except:
    pass
try:
    import soma_workflow.version
    soma_workflow_version = soma_workflow.version.shortVersion
except:
    soma_workflow_version = '2.7'
try:
    import capsul.info
    capsul_version = '.'.join([capsul.info.MAJOR, capsul.info.MINOR])
except:
    capsul_version = '0.0'

web_mode = 'ext'

# -- General configuration -----------------------------------------------------

# We load the release info into a dict by explicit execution
release_info = {'__version__': '0.1.0', 'AUTHOR': 'BrainVisa group',
                'AUTHOR_EMAIL': 'brainvisa@brainvisa.info'}
#execfile(os.path.join('..', '..', 'brainvisa', 'info.py'), release_info)

# Add any Sphinx extension module names here, as strings. They can be extensions
# coming with Sphinx (named 'sphinx.ext.*') or your custom ones.
import sphinx
if sphinx.version_info[:2] <= (1, 3):
    imgmath = 'sphinx.ext.pngmath'
else:
    imgmath = 'sphinx.ext.imgmath'
extensions = ['sphinx.ext.autodoc',
              'sphinx.ext.doctest',
              'sphinx.ext.intersphinx',
              'sphinx.ext.todo',
              'sphinx.ext.coverage',
              imgmath,
              'sphinx.ext.ifconfig',
              'sphinx.ext.autosummary',
              'sphinx.ext.viewcode',
              #'numpy_ext.numpydoc',
              'sphinx.ext.extlinks'
              ]

# Remove some numpy-linked warnings
numpydoc_show_class_members = False

# Generate autosummary even if no references
autosummary_generate = True

# Autodoc of class members
#autodoc_default_flags = ['members', 'inherited-members']
autodoc_default_flags = ['members']

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix of source filenames.
source_suffix = '.rst'

# The encoding of source files.
#source_encoding = 'utf-8'

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = u'BrainVISA installer'
copyright = u'2014, %(AUTHOR)s <%(AUTHOR_EMAIL)s>' % release_info

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
try:
    # The short X.Y version.
    version = '.'.join([str(x) for x in aims.version()])
    # The full version, including alpha/beta/rc tags.
    release = aims.versionString()
except:
    # The short X.Y version.
    version = release_info['__version__']
    # The full version, including alpha/beta/rc tags.
    release = version
    # The short X.Y version.

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#language = None

# There are two options for replacing |today|: either, you set today to some
# non-false value, then it is used:
#today = ''
# Else, today_fmt is used as the format for a strftime call.
#today_fmt = '%B %d, %Y'

# List of documents that shouldn't be included in the build.
#unused_docs = []

# List of directories, relative to source directory, that shouldn't be searched
# for source files.
exclude_patterns = ['examples',
                    "_themes/scikit-learn/static/ML_MAPS_README.rst"] \
    + templates_path

# The reST default role (used for this markup: `text`) to use for all documents.
#default_role = None

# If true, '()' will be appended to :func: etc. cross-reference text.
add_function_parentheses = True

# If true, the current module name will be prepended to all description
# unit titles (such as .. function::).
#add_module_names = True

# If true, sectionauthor and moduleauthor directives will be shown in the
# output. They are ignored by default.
#show_authors = False

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# A list of ignored prefixes for module index sorting.
#modindex_common_prefix = []


# -- Options for HTML output ---------------------------------------------------


# The theme to use for HTML and HTML Help pages.  Major themes that come with
# Sphinx are currently 'default' and 'sphinxdoc'.
#html_theme = 'scikit-learn'
html_theme = 'default'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
# html_theme_options = {'oldversion': False, 'collapsiblesidebar': True,
#'google_analytics': True, 'surveybanner': False,
#'sprintbanner': True}

# Add any paths that contain custom themes here, relative to this directory.
html_theme_path = ['_themes']

# The name for this set of Sphinx documents.  If None, it defaults to
# "<project> v<release> documentation".
html_title = "BrainVISA installer"

# A shorter title for the navigation bar.  Default is the same as html_title.
html_short_title = "BrainVISA installer"

# The name of an image file (relative to this directory) to place at the top
# of the sidebar.
#html_logo = "nsap_logo/nsap.png"

# The name of an image file (within the static path) to use as favicon of the
# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32
# pixels large.
#html_favicon = None

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,
# using the given strftime format.
#html_last_updated_fmt = '%b %d, %Y'

# If true, SmartyPants will be used to convert quotes and dashes to
# typographically correct entities.
#html_use_smartypants = True

# Custom sidebar templates, maps document names to template names.
#html_sidebars = {}

# Additional templates that should be rendered to pages, maps page names to
# template names.
#html_additional_pages = {}

# If false, no module index is generated.
html_use_modindex = False

# If false, no index is generated.
html_use_index = False

# If true, the index is split into individual pages for each letter.
#html_split_index = False

# If true, links to the reST sources are added to the pages.
html_show_sourcelink = False

# If true, an OpenSearch description file will be output, and all pages will
# contain a <link> tag referring to it.  The value of this option must be the
# base URL from which the finished HTML is served.
#html_use_opensearch = ''

# If nonempty, this is the file name suffix for HTML files (e.g. ".xhtml").
#html_file_suffix = ''

# Output file base name for HTML help builder.
htmlhelp_basename = 'installer'


# -- Options for LaTeX output --------------------------------------------------

# The paper size ('letter' or 'a4').
#latex_paper_size = 'letter'

# The font size ('10pt', '11pt' or '12pt').
#latex_font_size = '10pt'

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title, author, documentclass [howto/manual]).
latex_documents = [
    ('index', 'brainvisa-installer.tex', u'BrainVISA installer documentation',
     '', 'manual'),
]

# The name of an image file (relative to this directory) to place at the top of
# the title page.
#latex_logo = None

# For "manual" documents, if this is true, then toplevel headings are parts,
# not chapters.
#latex_use_parts = False

# Additional stuff for the LaTeX preamble.
#latex_preamble = ''

# Documents to append as an appendix to all manuals.
#latex_appendices = []

# If false, no module index is generated.
#latex_use_modindex = True


# Example configuration for intersphinx: refer to the Python standard library.
#intersphinx_mapping = {'http://docs.python.org/': None}
if web_mode != 'ext':
    # internal mode: web site installed in share/doc/web_test-<version>
    # other docs in share/doc/anatomist-<version> etc
    extlinks = {
        'axon': ('../axon-' + version + '/%s', 'axon '),
        'anatomist': ('../anatomist-' + version + '/%s',
                      'anatomist '),
        'pyanatomist': ('../pyanatomist-' + version + '/sphinx/%s',
                        'pyanatomist '),
        'anadox': ('../anatomist-' + version + '/doxygen/%s',
                   'anadox '),
        'aimsdox': ('../aimsdata-' + version + '/doxygen/%s',
                    'aimsdox '),
        'aimsdata': ('../aimsdata-' + version + '/%s', 'aimsdata '),
        'pyaims': ('../pyaims-' + version + '/sphinx/%s',
                   'pyaims '),
        'cartobdox': ('../cartobase-' + version + '/doxygen/%s',
                      'cartobdox '),
        'cartoddox': ('../cartodata-' + version + '/doxygen/%s',
                      'cartoddox '),
        'graphdox': ('../graph-' + version + '/doxygen/%s',
                     'graphdox '),
        'soma_workflow': ('../soma-workflow-' + soma_workflow_version
                          + '/sphinx/%s', 'soma_workflow '),
        'capsul': ('../capsul-' + capsul_version + '/%s', 'capsul '),
    }
else:
    # external mode (real website): web installed in root
    # other docs in <root>/doc/anatomist
    extlinks = {
        'axon': ('doc/axon/%s', 'axon '),
        'anatomist': ('doc/anatomist/%s', 'anatomist '),
        'pyanatomist': ('doc/pyanatomist/sphinx/%s', 'pyanatomist '),
        'anadox': ('doc/anatomist/doxygen/%s', 'anadox '),
        'anaepy': ('doc/pyanatomist/epydoc/%s', 'anaepy '),
        'aimsdox': ('doc/aimsdata/doxygen/%s', 'aimsdox '),
        'aimsdata': ('doc/aimsdata/%s', 'aimsdata '),
        'pyaims': ('doc/pyaims/sphinx/%s', 'pyaims '),
        'cartobdox': ('doc/cartobase/doxygen/%s', 'cartobdox '),
        'cartoddox': ('doc/cartodata/doxygen/%s', 'cartoddox '),
        'graphdox': ('doc/graph/doxygen/%s', 'graphdox '),
        'soma_workflow': ('doc/soma-workflow/sphinx/%s', 'soma_workflow '),
        'capsul': ('doc/capsul/%s', 'capsul '),
    }
