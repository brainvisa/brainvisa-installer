#! /usr/bin/env python

from optparse import OptionParser
import os, shutil

def system( cmd ):
  print cmd
  return os.system( cmd )


usage = '''
%prog [options] create
%prog [options] clear
%prog [options] add <.deb package> [ <.deb package> ... ]
%prog [options] remove <package name> [ <package name> ... ]'''
parser = OptionParser(usage=usage)
parser.add_option( '-r', '--repository', dest='repository', default='.', action='store',
                   help='Repository directory (default = current directory).' )
parser.add_option( '-c', '--component', dest='component', default='multiverse', action='store',
                   help='Component in which a package is added (default = multiverse).' )
(options, args) = parser.parse_args()
if len( args ) == 0:
  parser.error( 'No command given' )

if args[0] == 'create':
  if not os.path.exists( options.repository ):
    os.makedirs( options.repository )
  os.mkdir( os.path.join( options.repository, 'conf' ) )
  open(  os.path.join( options.repository, 'conf', 'distributions' ), 'w' ).write( '''Origin: IFR 49
Label: BrainVISA
Suite: stable
Codename: brainvisa
Version: 0.1
Architectures: i386 i686 noarch
Components: main contrib non-free multiverse
Description: BrainVISA repository
SignWith: BrainVISA
''' )
  open(  os.path.join( options.repository, 'brainvisa.gpg' ), 'w' ).write( '\x99\x01\xa2\x04J\xb0\xabM\x11\x04\x00\xd2S\xa8\x17J\xb9\xa6\xc7D~\xa5\x04\xe1T.Ef"\x07YE\nK\xc0\x9dV\x95\x9e\xbci\xa7\x1b\xb7\xbe\x8f\xe4`S\xbaW\x80\xb7Q\x08f\xca\xe4\x84\x8d\x97_\x82\x96\xdf\x98\xec-\xe9Y\x01\x86<j2\x8d\\8R\x82\x83\xebP\xb8hi\x88qN\x16\xef\xdf\xdbEz"\xcb\x00\xc2<\xdc\x9b9TZ\xc7\xe4~\x0e(H\x06\x1e"\xea} \xba\xec\xa3\x1f\x91~tfX\x80F\xda\x9c\x0ci\x7f\xd0\xca6\xb3\xd3s\x00\xa0\x8a\xb4b\x10\xf4\xf3\xbd\x9ed\x0cy\xd64\xf6\xe7\xf5\x13p"\xbf\x04\x00\xb4M$\xc7\x08\xf1R\xb5+\xa00\x07\xcc7f\'\xf8\xbf#\n8\x8cC8}ugD\x1eCV\xefPa\x0fS\xbc\xedGuA3\x94R[?_i6\x06\x9f\xe2\xef4Z\x93iPkw\xa6\xbf\x95\xef\xbc\x07\x12\xb9v\x9e\x18\xe0\tX#\x01a\xf4g\x80\x02\xa9\n/o\x16I\xfa\xedF\xffM\xba\x06>\xcf\x13\x19\x052u\xe9\x85\x9a\xa0\xef!\xdb\xe2\xe9r\xbb\xdd\x8b4B\xe9\xad\xa4.hoZ>z\x0e\xcfI\x04\x00\xcd\xe0\x1d\x18\xeel1\x98\x1c\xe6\x8d)s\xe29\xaaoO\xaah\xe2\xf0\x0e\x14\xb3\xb5r\x118\xd0\xcd\xf5\x02\x8c?\xbd\t7\x96\x15\xe7\xef\x90\xbf\x90A\x95\x03{\x8d9\x0bV\x8cC\xb0"g~;\xd0E\x82\xc5\x8d\x05\nuXSmd\xd7\xb2\x18y\x15}\xa2\xabc\x82\xc8EL_\xeb\xcdt3^\x9b\xfe\xfa!\xea\x82C\xf8\xc1\x1a+VC\x1b\xfd\x19\xde(\x7f\xa5\xf4\xba\xf1}\xec\xe8\xdb\r\x89|\x03\xd9`\xf4\x82U\x9f\xb4<BrainVISA (http://brainvisa.info) <brainvisa@brainvisa.info>\x88`\x04\x13\x11\x02\x00 \x05\x02J\xb0\xabM\x02\x1b\x03\x06\x0b\t\x08\x07\x03\x02\x04\x15\x02\x08\x03\x04\x16\x02\x03\x01\x02\x1e\x01\x02\x17\x80\x00\n\t\x10\xd0\x8b\x1as\xd7\x9d\xf3%\x0c\xb6\x00\x9e"k@5\xb7\xa1\x92\xe8\xa9,\xba\xb9SW\xae\xab\x11M\xef\x1d\x00\x9e"j\xdc\xa1^\x88\xce\xe0\x8b\x92P\x89\xc1u\x9e-\xa6\xf9N\xb9\xb0\x02\x00\x03\xb9\x02\r\x04J\xb0\xabM\x10\x08\x00\xeb\xe2\xff\x99;Qc\x1f\x16\x80\xfde\xa8v\x04%y\x8d.!\xa4\xe0=M\xaaT\xb2\xc8+\xdb<oT\x18n`\n=\x1c\xb7\x84\xac\xfe\xc2G\xed8\x8e8\xf8\xdflI\xcf\xaau.2\xb4\xf9\x1b\xbb\xfd\xe2\xb3(9\xc7\xa1\xb0T\xe0\x8a\t9\xe1\xd3%\xc2`l\xe6\x0b\x19\x9e\xf8W\xfb]9@G\xec\xd2-\xc9e\x0b\x9ax^\x03\xc1%\x956\xd9\xe4\xd6\x8f\x97\xc5\xa3M\xa6\xa1\xc2I\xf1$\xe18D<\xbcA\x8c/\x1d\xac>\x1b\xf7~\n\xa8\x87\'Q\xaa\x05*\xd6\x08Q\x16\xc8j\x8cD\xcf\xa7\xd3\x14\xa7\xa6\x98\x18`\x0f(\xfe\x97^\xdaZsV\xb4e\xf6\xaf\x9c\x15\x9cXPM\xb0\xdf\xaa\xb325\xab81\xf6nwt7\xf4X\xaa\x97o\x1e<\xd0Jz8W8\xec\xf9AaUO;]\xb9\xb4\x16_\xa3\xe8\xa2\x01\tb\x81\xb0\xacV\xd6\xf1\xebh;\xbf\x84\x06\xc8[\x9c\x11\x80\xaf!\x1d1\x1ak\xf5\xa98^P\xc8\x83O\xd5\xd7\x00\x03\x05\x08\x00\x9f\xf0E1K\xa1\xd12\x0b\xdb\x1dE\xf1\x9c|\xe5\x85\xc1:\xc2\xe8\x11\xff\x93_"\x89\xecT\xbf\xfd\rH\x85\xaf9d-\xa9\x16\x00y/\x84\x14j\x02\xa4\nIu\xb1P\xc5QQ\xfa\x15\x12e\xd3r\xa5KL\xba\x84na\xaf~\xd73\x9bt\x9fM\xe6\\z\x0f\xb6\x9e\xe8\xf5\xbd\x15\xce\xb4\xc9*\x95\xfe\xe1`\x10\'a^4\xd5\x15\x98\xb31\xf2\x95>\xfc\x9dM\xee\x96g^2\xe9\xf5f\x9e\x0cs\xc7\x01w\x97\xbe0fu9\x19\xc5>\xc4\xa5\xbf\xe8\x12)\xef\xcer\xa375\xa0\x05\x11\xbc\xcb\xc3\xd3\x06\xd3\x90\xb1K\xec\x988\xc4\xa1Ac\x9f\xact\xd5F%\x01\xbd}\x18\xb4\xb4\xc9\'\xeb\x03&z\xdcY\xc6U\x97\x1d\xad\xcbL\xd2D\xc3,kpO>\xd5@\xea\x95\xb3\xc4\xcbMLym\xb37\x97\x7f\xd4x#\xc0\xf7\xd4\xed\xe2\x14\x91\xfb\xcdK\xf9\x08\xb6@\xfbP\xa0\xa30\xfb\x0c\xb6\xa9\x8bzK\xc1\x94\xdd\x98&\xf0L|\x87I\xc5\x80\x88I\x04\x18\x11\x02\x00\t\x05\x02J\xb0\xabM\x02\x1b\x0c\x00\n\t\x10\xd0\x8b\x1as\xd7\x9d\xf3%\x01(\x00\xa0\x8a)S\xa8\x1ef\xc0M!l\x85xtZ\xe0?8\x12)c\x00\x9ff\x1f\xcc\xef\x93/\x93\x0b\xac!\xb2\xf0\x87e\xceWj\x9a\xc3D\xb0\x02\x00\x03' )
  open(  os.path.join( options.repository, 'index.html' ), 'w' ).write( '''<html><body>
<pre>
sudo wget http://hipip.eu/repository/brainvisa.list --output-document=/etc/apt/sources.list.d/brainvisa.list
wget -q http://hipip.eu/repository/brainvisa.gpg -O- | sudo apt-key add -
sudo apt-get -q update
</pre>
</body></html>''' )
  open(  os.path.join( options.repository, 'brainvisa.list' ), 'w' ).write( 'deb http://hipip.eu/repository/ brainvisa main contrib non-free multiverse' )
  system( 'reprepro -Vb "' + options.repository + '" export brainvisa' )


if args[0] == 'clear':
  for f in ( 'brainvisa.gpg', 'conf', 'db', 'dists', 'pool', 'brainvisa.list', 'index.html' ):
    fp = os.path.join( options.repository, f )
    if os.path.isdir( fp ):
      shutil.rmtree( fp )
    elif os.path.exists( fp ):
      os.remove( fp )
elif args[0] == 'add':
  for deb in args[ 1: ]:
    system( 'reprepro -Vb "' + options.repository + '" -C "' + options.component + '" includedeb brainvisa "' + deb + '"' )
elif args[0] == 'remove':
  for package in args[ 1: ]:
    system( 'reprepro -Vb "' + options.repository + '" -C "' + options.component + '" remove brainvisa "' + package + '"' )
elif args[0] == 'sync':
  system( 'rsync -r --delete --progress "' + options.repository + '" chauvain@hipip.eu:/var/www/repository/' )


