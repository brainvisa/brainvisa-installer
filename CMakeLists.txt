cmake_minimum_required( VERSION 2.6 )

set( BRAINVISA_PACKAGE_NAME brainvisa-installer )
set( BRAINVISA_PACKAGE_MAIN_PROJECT brainvisa-installer )
set( BRAINVISA_PACKAGE_MAINTAINER "CEA - IFR 49" )
set( BRAINVISA_PACKAGE_VERSION_MAJOR 4 )
set( BRAINVISA_PACKAGE_VERSION_MINOR 1 )
set( BRAINVISA_PACKAGE_VERSION_PATCH 0 )
set( BRAINVISA_PACKAGE_LICENCES "CeCILL-B" )

find_package( brainvisa-cmake REQUIRED )
BRAINVISA_PROJECT()

find_package( python REQUIRED )
find_package( PyQt4 REQUIRED )


BRAINVISA_DEPENDENCY( RUN DEPENDS python RUN ">= ${PYTHON_SHORT_VERSION}" )
BRAINVISA_DEPENDENCY( DEV DEPENDS python DEV ">= 2.4;<< 3.0" )

BRAINVISA_COPY_PYTHON_DIRECTORY( "${CMAKE_CURRENT_SOURCE_DIR}/python"
                                 ${PROJECT_NAME} )
BRAINVISA_COPY_DIRECTORY( "${CMAKE_CURRENT_SOURCE_DIR}/bin"
                          bin
                          ${PROJECT_NAME} )

BRAINVISA_CREATE_CMAKE_CONFIG_FILES()

# Defines the following variables:
#   @PROJECT_NAME@_VERSION_MAJOR
#   @PROJECT_NAME@_VERSION_MINOR
#   @PROJECT_NAME@_VERSION_PATCH
#   @PROJECT_NAME@_VERSION
#   @PROJECT_NAME_UPPER@_BINARY_DIR
#   @PROJECT_NAME_UPPER@_FOUND

# Set version variables
set( @PROJECT_NAME@_VERSION_MAJOR @BRAINVISA_PACKAGE_VERSION_MAJOR@ )
set( @PROJECT_NAME@_VERSION_MINOR @BRAINVISA_PACKAGE_VERSION_MINOR@ )
set( @PROJECT_NAME@_VERSION_PATCH @BRAINVISA_PACKAGE_VERSION_PATCH@ )
set( @PROJECT_NAME@_VERSION @BRAINVISA_PACKAGE_VERSION_MAJOR@.@BRAINVISA_PACKAGE_VERSION_MINOR@.@BRAINVISA_PACKAGE_VERSION_PATCH@ )
# Set @PROJECT_NAME_UPPER@_BINARY_DIR
get_filename_component( @PROJECT_NAME_UPPER@_BINARY_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH )
get_filename_component( @PROJECT_NAME_UPPER@_BINARY_DIR "${@PROJECT_NAME_UPPER@_BINARY_DIR}" PATH )
get_filename_component( @PROJECT_NAME_UPPER@_BINARY_DIR "${@PROJECT_NAME_UPPER@_BINARY_DIR}" PATH )
get_filename_component( @PROJECT_NAME_UPPER@_BINARY_DIR "${@PROJECT_NAME_UPPER@_BINARY_DIR}" PATH )

find_package( python REQUIRED )
find_package( PyQt4 REQUIRED )

set( @PROJECT_NAME_UPPER@_FOUND true )


